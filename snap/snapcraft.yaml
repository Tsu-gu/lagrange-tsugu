name: lagrange-tsugu
base: core24
version: '1.18.5'
summary: Lagrange is a cross-platform client for browsing Geminispace
description: |
  Lagrange is a cross-platform client for browsing Geminispace

  Beautiful typography with full Unicode support

  Autogenerated page style and Unicode icon for each Gemini domain

  Smart suggestions when typing the URL — search bookmarks, history, identities

  Sidebar for page outline, managing bookmarks and identities, and viewing history

  Multiple tabs and split view

  Identity management — create and use TLS client certificates

  Audio playback: MP3, Ogg Vorbis, WAV

  Curses-based TUI as an alternative to the graphical interface

  And more! Open `about:help` in the app, or see help.gmi

  This **unofficial snap** includes the mentioned TUI. You can use it by typing `lagrange-tsugu.tui` into your terminal. I tried making webp work as there is a flag for it but was unsuccessful.

grade: stable
confinement: strict

lint:
  ignore:
    - classic
    - library

parts:
  lagrange-tsugu:
    plugin: nil
    build-packages:
      - cmake
      - build-essential
      - pkg-config
      - zip
      - libsdl2-dev
      - libssl-dev
      - libpcre3-dev
      - zlib1g-dev
      - libunistring-dev
      - libfribidi-dev
      - libmpg123-dev
    #  - libwebp-dev
    #  - libwebp7
    #  - libwebpdemux2
    #  - libwebpmux3
      - meson
      - ninja-build
      - autotools-dev
      - autoconf
      - automake
      - libtool
      - g++
      - libncursesw6
      - libncurses-dev
    stage-packages:
      - libsdl2-2.0-0
      - libssl3
      - libpcre3
      - zlib1g
      - libfribidi0
      - libmpg123-0
    #  - libwebp7
    #  - libwebpdemux2
    #  - libwebpmux3
      - libfreetype6
      - libpng16-16
      - libfontconfig1
      - libharfbuzz0b
      - libproxy1v5
    override-build: |
      git clone --recursive --branch release https://git.skyjake.fi/gemini/lagrange.git src
      cd src
      mkdir -p build
      cd build

      # Configure with CMake
      cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DENABLE_HARFBUZZ_MINIMAL=YES \
        -DENABLE_FRIBIDI_BUILD=YES \
        -DENABLE_MPG123=YES \
        -DENABLE_KERNING=NO \
        -DENABLE_X11_SWRENDER=YES \
        -DENABLE_WINDOWPOS_FIX=YES \
        -DENABLE_IPC=YES \
        -DENABLE_TUI=YES
      
      # Build with max number of CPU cores
      cmake --build . -j$(nproc)
      
      # Install to snapcraft parts directory
      DESTDIR=$SNAPCRAFT_PART_INSTALL cmake --build . --target install
    build-environment:
      - CMAKE_PREFIX_PATH: "$SNAPCRAFT_STAGE/usr"
      - PKG_CONFIG_PATH: "$SNAPCRAFT_STAGE/usr/lib/pkgconfig:$SNAPCRAFT_STAGE/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig"

apps:
  lagrange-tsugu:
    command: usr/bin/lagrange
    extensions: [gnome]
    environment:
      XDG_CONFIG_HOME: "$SNAP_USER_COMMON"
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libproxy
    plugs:
      - network
      - network-bind
      - home
      - desktop
      - desktop-legacy
      - audio-playback
      - password-manager-service
      - x11
      - wayland
      - unity7
      - opengl

  tui:
    command: usr/bin/clagrange
    extensions: [gnome]
    environment:
      XDG_CONFIG_HOME: "$SNAP_USER_COMMON"
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/libproxy
    plugs:
      - network
      - network-bind
      - home
      - desktop
      - desktop-legacy
      - audio-playback
      - password-manager-service
      - x11
      - wayland
      - unity7
      - opengl    